!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("angular-google-tag-manager",["exports","@angular/core"],t):t((e=e||self)["angular-google-tag-manager"]={},e.ng.core)}(this,(function(e,t){"use strict";var a=function(){function e(e,t,a){this.googleTagManagerId=e,this.googleTagManagerAuth=t,this.googleTagManagerPreview=a,this.isLoaded=!1,this.browserGlobals={windowRef:function(){return window},documentRef:function(){return document}},this.gtmId=e,this.gtmAuth=t,this.gtmPreview=a}return e.prototype.getDataLayer=function(){var e=this.browserGlobals.windowRef();return e.dataLayer=e.dataLayer||[],e.dataLayer},e.prototype.pushOnDataLayer=function(e){this.getDataLayer().push(e)},e.prototype.addGtmToDom=function(){var e=this.browserGlobals.documentRef();this.pushOnDataLayer({"gtm.start":(new Date).getTime(),event:"gtm.js"});var t=e.createElement("script");t.id="GTMscript",t.async=!0,t.src=this.applyGtmQueryParams("//www.googletagmanager.com/gtm.js"),e.head.insertBefore(t,e.head.firstChild);var a=e.createElement("iframe");a.setAttribute("src",this.applyGtmQueryParams("//www.googletagmanager.com/ns.html")),a.style.width="0",a.style.height="0",a.style.display="none",a.style.visibility="hidden";var r=e.createElement("noscript");r.id="GTMiframe",r.appendChild(a),e.body.insertBefore(r,e.body.firstChild),this.isLoaded=!0},e.prototype.pushTag=function(e){this.isLoaded||this.addGtmToDom(),this.pushOnDataLayer(e)},e.prototype.applyGtmQueryParams=function(e){var t=["id="+this.gtmId];return this.gtmAuth&&t.push("gtm_auth="+this.gtmAuth),this.gtmPreview&&t.push("gtm_preview="+this.gtmPreview),-1===e.indexOf("?")&&(e+="?"),e+t.join("&")},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:String,decorators:[{type:t.Inject,args:["googleTagManagerId"]}]},{type:String,decorators:[{type:t.Optional},{type:t.Inject,args:["googleTagManagerAuth"]}]},{type:String,decorators:[{type:t.Optional},{type:t.Inject,args:["googleTagManagerPreview"]}]}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject("googleTagManagerId"),t.ɵɵinject("googleTagManagerAuth",8),t.ɵɵinject("googleTagManagerPreview",8))},token:e,providedIn:"root"}),e}();e.GoogleTagManagerService=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-google-tag-manager.umd.min.js.map